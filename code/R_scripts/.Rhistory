silk <- silk[silk$pop %in% populations$pop,-c("loc_name", "year")]
silk <- silk[silk$pop %in% populations$pop,-(c("loc_name", "year"))]
silk[,-"loc_name"]
silk[,-("loc_name")]
silk[,"loc_name"]
silk[,colnames(silk)]
silk[,!(colnames(silk) %in% c("loc_name", "year"))]
silk <- silk[silk$pop %in% populations$pop,!(colnames(silk) %in% c("loc_name", "year"))]
mean(silk[silk$pop == 1 & silk$env == "06A", c("value")])
silk[silk$pop == 1 & silk$env == "06A", c("value")]
mean(silk[silk$pop == 1 & silk$env == "06A", c("value")], na.rm = TRUE)
mean(silk[silk$pop == 2 & silk$env == "06A", c("value")], na.rm = TRUE)
result <- aggregate(value ~ pop + env, data = silk,
FUN = function(x) c(mean = mean(x), min = min(x), max = max(x)))
View(result)
result <- aggregate(value ~ pop + env, data = silk,
FUN = function(x) c("mean" = mean(x), min = min(x), max = max(x)))
View(result)
View(result)
result <- aggregate(value ~ pop + env, data = silk,
FUN = function(x) c(mean = mean(x), max = max(x), min = min(x)))
colnames(result) <- c("pop", "env", "silk_mean", "silk_max", "silk_min")
View(result)
result <- do.call(aggregate(value ~ pop + env, data = silk,
FUN = function(x) c(mean = mean(x), max = max(x), min = min(x))))
result <- do.call(data.frame, aggregate(value ~ pop + env, data = silk,
FUN = function(x) c(mean = mean(x), max = max(x), min = min(x))))
result <- do.call(data.frame,aggregate(value ~ pop + env, data = silk,
FUN = function(x) c(mean = mean(x), max = max(x), min = min(x))))
colnames(result) <- c("pop", "env", "silk_mean", "silk_max", "silk_min")
result <- do.call(data.frame,aggregate(value ~ pop + env, data = silk,
FUN = function(x) c(mean = mean(x), max = max(x), min = min(x), length = length(x))))
table(nchar(silk$accename))
silk$accename <- sub("^0+", "", substr(silk$accename, nchar(silk$accename)-2, nchar(silk$accename)))
table(silk$accename)
table(is.na(silk$value))
silk <- silk[!(is.na(silk$value)),]
spo <- read.xlsx("../data/supp_pp.111.185033_185033Supplemental_Data_S1.xlsx")
View(spo)
table(spo$pop == substr(spo$Geno_code, 4,4))
substr(spo$Geno_code,4,4)
populations <- read.csv("../data/sim_data/populations.csv")
silk <- read.table("../data/Buckler_etal_2009_Science_flowering_time_data-090807/NAM_DaysToSilk.txt",
header = TRUE, fill = TRUE)
silk <- silk[,c("loc_name", "year", "pop", "accename", "value")]
silk <- silk[grepl("Z0", silk$accename),]
silk$value <- as.numeric(silk$value)
silk <- silk[order(silk$accename),]
silk$env <- paste(silk$loc_name, silk$year)
silk$env[silk$env == "Aurora, NY 2006"] <- "06A"
silk$env[silk$env == "Aurora, NY 2007"] <- "07A"
silk$env[silk$env == "Clayton, NC 2007"] <- "07CL"
silk$env[silk$env == "Columbia, MO 2006"] <- "06MO"
silk$env[silk$env == "Columbia, MO 2007"] <- "07MO"
silk$env[silk$env == "Urbana, IL 2006"] <- "06IL"
silk$env[silk$env == "Urbana, IL 2007"] <- "07IL"
silk <- silk[silk$pop %in% populations$pop,!(colnames(silk) %in% c("loc_name", "year"))]
silk$accename <- sub("^0+", "", substr(silk$accename, nchar(silk$accename)-2, nchar(silk$accename)))
silk <- silk[!(is.na(silk$value)),]
silk$trait <- "silk"
tassel <- read.table("../data/Buckler_etal_2009_Science_flowering_time_data-090807/NAM_DaysToTassel.txt",
header = TRUE, fill = TRUE)
View(tassel)
table(tassel$loc_name)
tassel <- tassel[,c("loc_name", "year", "pop", "accename", "value")]
tassel <- tassel[,c("loc_name", "year", "pop", "accename", "value")]
tassel <- tassel[grepl("Z0", tassel$accename),]
tassel$value <- as.numeric(tassel$value)
tassel <- tassel[order(tassel$accename),]
tassel$env <- paste(tassel$loc_name, tassel$year)
tassel$env[tassel$env == "Aurora, NY 2006"] <- "06A"
tassel$env[tassel$env == "Aurora, NY 2007"] <- "07A"
tassel$env[tassel$env == "Clayton, NC 2007"] <- "07CL"
tassel$env[tassel$env == "Columbia, MO 2006"] <- "06MO"
tassel$env[tassel$env == "Columbia, MO 2007"] <- "07MO"
tassel$env[tassel$env == "Urbana, IL 2006"] <- "06IL"
tassel$env[tassel$env == "Urbana, IL 2007"] <- "07IL"
tassel <- tassel[tassel$pop %in% populations$pop,!(colnames(tassel) %in% c("loc_name", "year"))]
tassel$accename <- sub("^0+", "", substr(tassel$accename, nchar(tassel$accename)-2, nchar(tassel$accename)))
tassel <- tassel[!(is.na(tassel$value)),]
tassel$trait <- "tassel"
table(paste(tassel$pop, tassel$accename))
table(tassel$env)
table(silk$env)
View(result)
spo <- spo[,c("pop", "Geno_code", "Starch_db", "Protein_db", "Oil_db", "env")]
table(spo$Geno_code)
table(is.na(spo$Geno_code))
table(is.na(spo$Starch_db))
table(is.na(spo$Protien_db))
table(is.na(spo$Protein_db))
table(is.na(spo$Oil_db))
is.na(spo$Oil_db) == is.na(spo$Geno_code)
table(is.na(spo$Oil_db) == is.na(spo$Geno_code))
table(is.na(spo$Oil_db) == is.na(spo$Starch_db))
table(is.na(spo$Oil_db) == is.na(spo$Protein_db))
spo <- spo[!(is.na(spo$Geno_code))]
spo <- spo[!(is.na(spo$Geno_code)),]
sub("^0+", "", substr(spo$Geno_code, 3,4))
table(pop == sub("^0+", "", substr(spo$Geno_code, 3,4)))
table(spo$pop == sub("^0+", "", substr(spo$Geno_code, 3,4)))
spo[!(spo$pop == sub("^0+", "", substr(spo$Geno_code, 3,4))),]
spo[!(spo$pop == sub("^0+", "", substr(spo$Geno_code, 3,4))),] -> test
View(test)
spo <- spo[spo$pop %in% populations$pop,]
table(spo$pop == sub("^0+", "", substr(spo$Geno_code, 3,4)))
spo$accename <- sub("^0+", "", substr(spo$Geno_code, nchar(spo$Geno_code)-2, nchar(spo$Geno_code)))
spo <- spo[,-c("Geno_code")]
spo <- read.xlsx("../data/supp_pp.111.185033_185033Supplemental_Data_S1.xlsx")
spo <- spo[,c("pop", "Geno_code", "Starch_db", "Protein_db", "Oil_db", "env")]
spo <- spo[!(is.na(spo$Geno_code)),]
spo$accename <- sub("^0+", "", substr(spo$Geno_code, nchar(spo$Geno_code)-2, nchar(spo$Geno_code)))
spo <- spo[spo$pop %in% populations$pop,!(colnames(spo) %in% c("Geno_code"))]
?reshape
spo <- read.xlsx("../data/supp_pp.111.185033_185033Supplemental_Data_S1.xlsx")
spo <- read.xlsx("../data/supp_pp.111.185033_185033Supplemental_Data_S1.xlsx")
library(openxlsx)
library(data.table)
spo <- read.xlsx("../data/supp_pp.111.185033_185033Supplemental_Data_S1.xlsx")
table(spo$Geno_code)
table(substr(spo$Geno_code,1,4))
spo <- read.xlsx("../data/supp_pp.111.185033_185033Supplemental_Data_S1.xlsx")
spo <- spo[,c("pop", "Geno_code", "Starch_db", "Protein_db", "Oil_db", "env")]
spo <- spo[!(is.na(spo$Geno_code)),]
spo$accename <- sub("^0+", "", substr(spo$Geno_code, nchar(spo$Geno_code)-2, nchar(spo$Geno_code)))
spo <- spo[spo$pop %in% populations$pop,!(colnames(spo) %in% c("Geno_code"))]
spo <- read.xlsx("../data/supp_pp.111.185033_185033Supplemental_Data_S1.xlsx")
spo <- spo[,c("pop", "Geno_code", "Starch_db", "Protein_db", "Oil_db", "env")]
spo <- spo[!(is.na(spo$Geno_code)),]
spo <- spo[order(spo$Geno_code),]
spo$accename <- sub("^0+", "", substr(spo$Geno_code, nchar(spo$Geno_code)-2, nchar(spo$Geno_code)))
spo <- spo[spo$pop %in% populations$pop,!(colnames(spo) %in% c("Geno_code"))]
spo_long <- reshape(spo,
direction = "long",
varying = c("Starch_db", "Protein_db", "Oil_db"),
v.names = c("Starch_db", "Protein_db", "Oil_db"),
timevar = "trait",
times = 1,
idvar = c("pop", "env", "accename"))
table(duplicated(paste(spo$pop, spo$env, spo$accename)))
spo[duplicated(paste(spo$pop, spo$env, spo$accename)),] -> test
View(test)
spo <- read.xlsx("../data/supp_pp.111.185033_185033Supplemental_Data_S1.xlsx")
table(spo$Rep)
table(spo$Rep, useNA=c("always"))
spo <- spo[spo$Rep == 1,]
spo <- read.xlsx("../data/supp_pp.111.185033_185033Supplemental_Data_S1.xlsx")
spo <- spo[,c("pop", "Geno_code", "Starch_db", "Protein_db", "Oil_db", "env")]
spo <- spo[spo$Rep == 1,]
spo <- spo[!(is.na(spo$Geno_code)),]
spo <- spo[order(spo$Geno_code),]
spo$accename <- sub("^0+", "", substr(spo$Geno_code, nchar(spo$Geno_code)-2, nchar(spo$Geno_code)))
spo <- spo[spo$pop %in% populations$pop,!(colnames(spo) %in% c("Geno_code"))]
table(duplicated(paste(spo$pop, spo$env, spo$accename)))
spo <- read.xlsx("../data/supp_pp.111.185033_185033Supplemental_Data_S1.xlsx")
spo <- spo[,c("pop", "Geno_code", "Starch_db", "Protein_db", "Oil_db", "env")]
spo <- read.xlsx("../data/supp_pp.111.185033_185033Supplemental_Data_S1.xlsx")
spo <- spo[spo$Rep == 1,]
spo <- spo[,c("pop", "Geno_code", "Starch_db", "Protein_db", "Oil_db", "env")]
spo <- spo[!(is.na(spo$Geno_code)),]
spo <- spo[order(spo$Geno_code),]
spo$accename <- sub("^0+", "", substr(spo$Geno_code, nchar(spo$Geno_code)-2, nchar(spo$Geno_code)))
spo <- spo[spo$pop %in% populations$pop,!(colnames(spo) %in% c("Geno_code"))]
table(duplicated(paste(spo$pop, spo$env, spo$accename)))
spo_long <- reshape(spo,
direction = "long",
varying = c("Starch_db", "Protein_db", "Oil_db"),
v.names = c("Starch_db", "Protein_db", "Oil_db"),
timevar = "trait",
times = 1,
idvar = c("pop", "env", "accename"))
View(spo_long)
df_long <- reshape(
spo,
direction = "long",
varying = list(c("Starch_db", "Protein_db", "Oil_db")),
v.names = c("Starch_db", "Protein_db", "Oil_db"),
timevar = "variable",
times = c("Starch", "Protein", "Oil"),
idvar = c("pop", "env", "accename")
)
View(df_long)
df_long <- reshape(
spo,
direction = "long",
varying = list(c("Starch_db", "Protein_db", "Oil_db")),
v.names = c("value"),
timevar = "trait",
times = c("Starch", "Protein", "Oil"),
idvar = c("pop", "env", "accename")
)
spo_long <- reshape(
spo,
direction = "long",
varying = list(c("Starch_db", "Protein_db", "Oil_db")),
v.names = c("value"),
timevar = "trait",
times = c("starch", "protein", "oil"),
idvar = c("pop", "env", "accename")
)
View(spo_long)
spo_long <- spo_long[colnames(tassel)]
NAM_phenotypes <- rbind(silk, tassel, spo)
NAM_phenotypes <- rbind(silk, tassel, spo_long)
View(NAM_phenotypes)
colnames(NAM_phenotypes) <- c("pop", "individual", "value", "env", "trait")
result <- do.call(data.frame,aggregate(value ~ pop + env + trait, data = NAM_phenotypes,
FUN = function(x) c(mean = mean(x), max = max(x), min = min(x), length = length(x))))
View(result)
populations <- read.csv("../data/sim_data/populations.csv")
silk <- read.table("../data/Buckler_etal_2009_Science_flowering_time_data-090807/NAM_DaysToSilk.txt",
header = TRUE, fill = TRUE)
silk <- silk[,c("loc_name", "year", "pop", "accename", "value")]
silk <- silk[grepl("Z0", silk$accename),]
silk$value <- as.numeric(silk$value)
silk <- silk[order(silk$accename),]
silk$env <- paste(silk$loc_name, silk$year)
silk$env[silk$env == "Aurora, NY 2006"] <- "06A"
silk$env[silk$env == "Aurora, NY 2007"] <- "07A"
silk$env[silk$env == "Clayton, NC 2007"] <- "07CL"
silk$env[silk$env == "Columbia, MO 2006"] <- "06MO"
silk$env[silk$env == "Columbia, MO 2007"] <- "07MO"
silk$env[silk$env == "Urbana, IL 2006"] <- "06IL"
silk$env[silk$env == "Urbana, IL 2007"] <- "07IL"
silk <- silk[silk$pop %in% populations$pop,!(colnames(silk) %in% c("loc_name", "year"))]
silk$accename <- sub("^0+", "", substr(silk$accename, nchar(silk$accename)-2, nchar(silk$accename)))
silk <- silk[!(is.na(silk$value)),]
silk$trait <- "silk"
tassel <- read.table("../data/Buckler_etal_2009_Science_flowering_time_data-090807/NAM_DaysToTassel.txt",
header = TRUE, fill = TRUE)
tassel <- tassel[,c("loc_name", "year", "pop", "accename", "value")]
tassel <- tassel[grepl("Z0", tassel$accename),]
tassel$value <- as.numeric(tassel$value)
tassel <- tassel[order(tassel$accename),]
tassel$env <- paste(tassel$loc_name, tassel$year)
tassel$env[tassel$env == "Aurora, NY 2006"] <- "06A"
tassel$env[tassel$env == "Aurora, NY 2007"] <- "07A"
tassel$env[tassel$env == "Clayton, NC 2007"] <- "07CL"
tassel$env[tassel$env == "Columbia, MO 2006"] <- "06MO"
tassel$env[tassel$env == "Columbia, MO 2007"] <- "07MO"
tassel$env[tassel$env == "Urbana, IL 2006"] <- "06IL"
tassel$env[tassel$env == "Urbana, IL 2007"] <- "07IL"
tassel <- tassel[tassel$pop %in% populations$pop,!(colnames(tassel) %in% c("loc_name", "year"))]
tassel$accename <- sub("^0+", "", substr(tassel$accename, nchar(tassel$accename)-2, nchar(tassel$accename)))
tassel <- tassel[!(is.na(tassel$value)),]
tassel$trait <- "tassel"
spo <- read.xlsx("../data/supp_pp.111.185033_185033Supplemental_Data_S1.xlsx")
spo <- spo[spo$Rep == 1,]
spo <- spo[,c("pop", "Geno_code", "Starch_db", "Protein_db", "Oil_db", "env")]
spo <- spo[!(is.na(spo$Geno_code)),]
spo <- spo[order(spo$Geno_code),]
spo$accename <- sub("^0+", "", substr(spo$Geno_code, nchar(spo$Geno_code)-2, nchar(spo$Geno_code)))
spo <- spo[spo$pop %in% populations$pop,!(colnames(spo) %in% c("Geno_code"))]
spo_long <- reshape(
spo,
direction = "long",
varying = list(c("Starch_db", "Protein_db", "Oil_db")),
v.names = c("value"),
timevar = "trait",
times = c("starch", "protein", "oil"),
idvar = c("pop", "env", "accename")
)
spo_long <- spo_long[colnames(tassel)]
NAM_phenotypes <- rbind(silk, tassel, spo_long)
colnames(NAM_phenotypes) <- c("pop", "individual", "value", "env", "trait")
mean_phenotypes <- do.call(data.frame,aggregate(value ~ pop + env + trait, data = NAM_phenotypes,
FUN = function(x) c(mean = mean(x), max = max(x), min = min(x), length = length(x))))
colnames(result) <- c("pop", "env", "trait_mean", "trait_max", "trait_min")
write.csv(NAM_phenotypes, "../data/NAM_phenotype_data/NAM_phenotypes.csv", row.names = FALSE)
write.csv(mean_phenotypes, "../data/NAM_phenotype_data/mean_phenotypes.csv", row.names = FALSE)
View(spo_long)
View(spo)
#read in NAM phenotypes per individual and mean over pop+env
NAM_phenotypes <- read.xlsx("../data/NAM_phenotype_data/NAM_phenotypes.csv")
#read in NAM phenotypes per individual and mean over pop+env
NAM_phenotypes <- read.csv("../data/NAM_phenotype_data/NAM_phenotypes.csv")
View(NAM_phenotypes)
View(NAM_phenotypes)
View(populations)
rrblup_preds <- data.frame("pop" = NA, "ind" = NA, "trait" = NA, "pred" = NA)
View(rrblup_preds)
rrblup_preds <- data.frame("pop" = NULL, "ind" = NULL, "trait" = NULL, "pred" = NULL)
View(rrblup_preds)
rbind(rrblup_preds, data.frame("pop" = 1, "ind" = 11, "trait" = 1, "pred" = 1))
table(NAM_phenotypes$trait)
i <- 1
j <- "silk"
sim_add <- read.csv(paste("../sim_output/normal_rec/additive_encoding/add_",i,".csv", sep = ""))
real_add <- read.csv(paste("../data/NAM_genotype_data/additive_encoding/pop_",i,"_add.csv", sep = ""))
NAM_phenotypes[NAM_phenotypes$pop == i & NAM_phenotypes$env == env & NAM_phenotypes$trait == j,]
env <- "06A"
NAM_phenotypes[NAM_phenotypes$pop == i & NAM_phenotypes$env == env & NAM_phenotypes$trait == j,]
NAM_phenotypes[NAM_phenotypes$pop == i & NAM_phenotypes$env == env & NAM_phenotypes$trait == j,] -> test
View(test)
View(result)
colnames(result) <- c("pop", "env", "trait", "trait_mean", "trait_max", "trait_min", "N")
real_add$individual
NAM_phenotypes[NAM_phenotypes$pop == i & NAM_phenotypes$env == env & NAM_phenotypes$trait == j, "individual"]
View(DT_wheat)
#subset real and sim add and  phenotypes based on intersection of individual ids per env and pop
phenos <- NAM_phenotypes[NAM_phenotypes$pop == i & NAM_phenotypes$env == env & NAM_phenotypes$trait == j,]
IDs <- intersect(real_add$individual, phenos$individual)
real_add <- real_add[real_add$individual %in% IDs,]
phenos <- phenos[phenos$individual %in% IDs,]
IDs
View(phenos)
table(duplicated(phenos$individual))
View(silk)
table(duplicated(paste(silk$pop, silk$accename, silk$env)))
table(duplicated(paste(tassel$pop, tassel$accename, tassel$env)))
silk <- read.table("../data/Buckler_etal_2009_Science_flowering_time_data-090807/NAM_DaysToSilk.txt",
header = TRUE, fill = TRUE)
View(silk)
#silk <- silk[,c("loc_name", "year", "pop", "accename", "value")]
silk <- silk[grepl("Z0", silk$accename),]
silk$value <- as.numeric(silk$value)
silk <- silk[order(silk$accename),]
silk$env <- paste(silk$loc_name, silk$year)
silk$env[silk$env == "Aurora, NY 2006"] <- "06A"
silk$env[silk$env == "Aurora, NY 2007"] <- "07A"
silk$env[silk$env == "Clayton, NC 2007"] <- "07CL"
silk$env[silk$env == "Columbia, MO 2006"] <- "06MO"
silk$env[silk$env == "Columbia, MO 2007"] <- "07MO"
silk$env[silk$env == "Urbana, IL 2006"] <- "06IL"
silk$env[silk$env == "Urbana, IL 2007"] <- "07IL"
#silk <- silk[silk$pop %in% populations$pop,!(colnames(silk) %in% c("loc_name", "year"))]
silk <- silk[silk$pop %in% populations$pop,]
silk$accename <- sub("^0+", "", substr(silk$accename, nchar(silk$accename)-2, nchar(silk$accename)))
silk <- silk[!(is.na(silk$value)),]
silk$trait <- "silk"
table(duplicated(paste(silk$pop, silk$accename, silk$env)))
silk[(duplicated(paste(silk$pop, silk$accename, silk$env)),]
silk[(duplicated(paste(silk$pop, silk$accename, silk$env))]
silk[duplicated(paste(silk$pop, silk$accename, silk$env)),]
silk[duplicated(paste(silk$pop, silk$accename, silk$env)),] -> test
View(test)
silk <- silk[!(duplicated(paste(silk$pop, silk$accename, silk$env))),]
populations <- read.csv("../data/sim_data/populations.csv")
silk <- read.table("../data/Buckler_etal_2009_Science_flowering_time_data-090807/NAM_DaysToSilk.txt",
header = TRUE, fill = TRUE)
silk <- silk[,c("loc_name", "year", "pop", "accename", "value")]
silk <- silk[grepl("Z0", silk$accename),]
silk$value <- as.numeric(silk$value)
silk <- silk[order(silk$accename),]
silk$env <- paste(silk$loc_name, silk$year)
silk$env[silk$env == "Aurora, NY 2006"] <- "06A"
silk$env[silk$env == "Aurora, NY 2007"] <- "07A"
silk$env[silk$env == "Clayton, NC 2007"] <- "07CL"
silk$env[silk$env == "Columbia, MO 2006"] <- "06MO"
silk$env[silk$env == "Columbia, MO 2007"] <- "07MO"
silk$env[silk$env == "Urbana, IL 2006"] <- "06IL"
silk$env[silk$env == "Urbana, IL 2007"] <- "07IL"
silk <- silk[silk$pop %in% populations$pop,!(colnames(silk) %in% c("loc_name", "year"))]
silk$accename <- sub("^0+", "", substr(silk$accename, nchar(silk$accename)-2, nchar(silk$accename)))
silk <- silk[!(is.na(silk$value)),]
silk <- silk[!(duplicated(paste(silk$pop, silk$accename, silk$env))),]
silk$trait <- "silk"
tassel <- read.table("../data/Buckler_etal_2009_Science_flowering_time_data-090807/NAM_DaysToTassel.txt",
header = TRUE, fill = TRUE)
tassel <- tassel[,c("loc_name", "year", "pop", "accename", "value")]
tassel <- tassel[grepl("Z0", tassel$accename),]
tassel$value <- as.numeric(tassel$value)
tassel <- tassel[order(tassel$accename),]
tassel$env <- paste(tassel$loc_name, tassel$year)
tassel$env[tassel$env == "Aurora, NY 2006"] <- "06A"
tassel$env[tassel$env == "Aurora, NY 2007"] <- "07A"
tassel$env[tassel$env == "Clayton, NC 2007"] <- "07CL"
tassel$env[tassel$env == "Columbia, MO 2006"] <- "06MO"
tassel$env[tassel$env == "Columbia, MO 2007"] <- "07MO"
tassel$env[tassel$env == "Urbana, IL 2006"] <- "06IL"
tassel$env[tassel$env == "Urbana, IL 2007"] <- "07IL"
tassel <- tassel[tassel$pop %in% populations$pop,!(colnames(tassel) %in% c("loc_name", "year"))]
tassel$accename <- sub("^0+", "", substr(tassel$accename, nchar(tassel$accename)-2, nchar(tassel$accename)))
tassel <- tassel[!(is.na(tassel$value)),]
tassel <- tassel[!(duplicated(paste(tassel$pop, tassel$accename, tassel$env))),]
tassel$trait <- "tassel"
spo <- read.xlsx("../data/supp_pp.111.185033_185033Supplemental_Data_S1.xlsx")
spo <- spo[spo$Rep == 1,]
spo <- spo[,c("pop", "Geno_code", "Starch_db", "Protein_db", "Oil_db", "env")]
spo <- spo[!(is.na(spo$Geno_code)),]
spo <- spo[order(spo$Geno_code),]
spo$accename <- sub("^0+", "", substr(spo$Geno_code, nchar(spo$Geno_code)-2, nchar(spo$Geno_code)))
spo <- spo[spo$pop %in% populations$pop,!(colnames(spo) %in% c("Geno_code"))]
spo_long <- reshape(
spo,
direction = "long",
varying = list(c("Starch_db", "Protein_db", "Oil_db")),
v.names = c("value"),
timevar = "trait",
times = c("starch", "protein", "oil"),
idvar = c("pop", "env", "accename")
)
spo_long <- spo_long[colnames(tassel)]
NAM_phenotypes <- rbind(silk, tassel, spo_long)
colnames(NAM_phenotypes) <- c("pop", "individual", "value", "env", "trait")
mean_phenotypes <- do.call(data.frame,aggregate(value ~ pop + env + trait, data = NAM_phenotypes,
FUN = function(x) c(mean = mean(x), max = max(x), min = min(x), length = length(x))))
colnames(result) <- c("pop", "env", "trait", "trait_mean", "trait_max", "trait_min", "N")
write.csv(NAM_phenotypes, "../data/NAM_phenotype_data/NAM_phenotypes.csv", row.names = FALSE)
write.csv(mean_phenotypes, "../data/NAM_phenotype_data/mean_phenotypes.csv", row.names = FALSE)
library(Matrix)
library(MASS)
library(crayon)
library(sommer)
library(openxlsx)
##train rrBLUP and gBLUP models to calc accuracy on real and sim datasets (MSE test/train traits)
##and determine best cross of sim datasets (max traits with calc marker effects)
##calc accuracy of simulated best crosses based on real pheno max
#read in NAM phenotypes per individual and mean over pop+env
NAM_phenotypes <- read.csv("../data/NAM_phenotype_data/NAM_phenotypes.csv")
#read populations
populations <- read.csv("../data/sim_data/populations.csv")
#create output dfs
rrblup_preds <- data.frame("pop" = NULL, "ind" = NULL, "trait" = NULL, "pred" = NULL)
gblup_preds <- data.frame("pop" = NULL, "ind" = NULL, "trait" = NULL, "pred" = NULL)
pred_summary <- data.frame("population" = populations$pop, "trait_mean" = NA, "trait_max" = NA, "trait_min" = NA)
traits <- c("silk", "tassel", "oil", "protein", "starch")
#for now, focus on env Aurora NY 2006 (06A) and Columbia MO 2006 (06MO)
#for each env individually, no fixed effect calc
env <- "06A"
#load real and simulated genotypes (additive encoding)
sim_add <- read.csv(paste("../sim_output/normal_rec/additive_encoding/add_",i,".csv", sep = ""))
real_add <- read.csv(paste("../data/NAM_genotype_data/additive_encoding/pop_",i,"_add.csv", sep = ""))
phenos <- NAM_phenotypes[NAM_phenotypes$pop == i & NAM_phenotypes$env == env & NAM_phenotypes$trait == j,]
IDs <- intersect(real_add$individual, phenos$individual)
sim_add <- sim_add[sim_add$individual %in% IDs,]
NAM_phenotypes
i
env
j
phenos
View(phenos)
sim_add
#load real and simulated genotypes (additive encoding)
sim_add <- read.csv(paste("../sim_output/normal_rec/additive_encoding/add_",i,".csv", sep = ""))
real_add <- read.csv(paste("../data/NAM_genotype_data/additive_encoding/pop_",i,"_add.csv", sep = ""))
IDs <- intersect(real_add$individual, phenos$individual)
sim_add <- sim_add[sim_add$individual %in% IDs,]
#load real and simulated genotypes (additive encoding)
sim_add <- read.csv(paste("../sim_output/normal_rec/additive_encoding/add_",i,".csv", sep = ""))
IDs <- intersect(real_add$individual, phenos$individual)
sim_add$individual
sim_add <- sim_add[IDs,]
View(sim_add)
View(GT_wheat)
real_add[-1]
real_add <- real_add[real_add$individual %in% IDs,]
real_add[-1]
##run rrBLUP
model2 <- mmer(trait ~ 1, random = ~vsr(list(real_add[-1])), rcov=~units, data = phenos, verbose = FALSE)
View(phenos)
phenos <- phenos[phenos$individual %in% IDs,]
##run rrBLUP
model2 <- mmer(trait ~ 1, random = ~vsr(list(real_add[-1])), rcov=~units, data = phenos, verbose = FALSE)
View(real_add)
as.matrix(real_add[-1])
as.matrix(real_add[-1]) -> test
##run rrBLUP
model2 <- mmer(trait ~ 1, random = ~vsr(list(test)), rcov=~units, data = phenos, verbose = FALSE)
View(DT_wheat)
?mmer
DT
phenos$test <- as.factor(phenos$individual)
##run rrBLUP
model2 <- mmer(trait ~ 1, random = ~vsr(list(test)), rcov=~units, data = phenos, verbose = FALSE)
test
View(test)
str(test)
list(test)
list(test) -> test
View(test)
str(test)
str(DT_wheat)
str(GT_wheat)
as.numeric(test)
real_add
real_add[1]
real_add[-1]
real_add[-1] -> test
as.numeric(test)
test
apply(test,1,as.numeric)
apply(test,1,as.numeric) -> test2
View(test2)
##run rrBLUP
model2 <- mmer(trait ~ 1, random = ~vsr(list(test2)), rcov=~units, data = phenos, verbose = FALSE)
as.matrix(test2)
as.matrix(test2) -> test3
##run rrBLUP
model2 <- mmer(trait ~ 1, random = ~vsr(list(test3)), rcov=~units, data = phenos, verbose = FALSE)
##run rrBLUP
model2 <- mmer(trait ~ 1, random = ~vsr(test3), rcov=~units, data = phenos, verbose = FALSE)
##run rrBLUP
model2 <- mmer(value ~ 1, random = ~vsr(list(real_add[-1])), rcov=~units, data = phenos, verbose = FALSE)
View(model2)
model2$U
model2$U$`u:real_add`$value
model2$U
model2$U$`u:real_add`$value == model$U
model2$U
model2$U -> test
model2$U$`u:real_add`$value == model$U -> test2
model2$U$`u:real_add`$value -> test2
test$`u:real_add` == test2
test$`u:real_add`
test$`u:real_add`$value
test$`u:real_add`$value == test2
table(test$`u:real_add`$value == test2)
##run rrBLUP
rBLUP <- mmer(value ~ 1, random = ~vsr(list(real_add[-1])), rcov=~units, data = phenos, verbose = FALSE)
#get marker effects
effects <- rBLUP$U$`u:real_add`$value
