library(openxlsx)
#lod NAM genos imputed
NAM_genos <- read.xlsx("../data/NAM_map_and_genos-121025/NAM_genos_imputed_20090807.xlsx")
View(NAM_genos)
?rep
rep(1,2,3,4,5, each = 5)
rep(c(1,2,3,4,5)) each = 5)
rep(c(1,2,3,4,5)), each = 5)
rep(c(1,2,3,4,5), each = 5)
rep(c(1,2,3,4,5), each = 5) + rep(c(100,200,300,400,500), each = 5)
rep(c(1,2,3,4,5), each = 5) + rep(c0,100,200,300,400), each = 5)
rep(c(1,2,3,4,5), each = 5) + rep(c(0,100,200,300,400), each = 5)
rep(c(1,2,3,4,5), each = 5) + rep(c(0,100,200,300,400), each = 5) + 2
rep(c(1,2,3,4,5), each = 5) + rep(c(0,100,200,300,400), each = 5) + 2 -> index
NAM_genos[,index]
NAM_genos[index,]
NAM_genos[index,] -> test
View(test)
rep(c(1,2,3,4,5)) + rep(c(0,100,200,300,400), each = 5) + 2 -> index
index
NAM_genos[index,] -> test
?read.xlsx
colnames(NAM_genos) <- NAM_genos[3,]
colnames(NAM_genos) <- NAM_genos[2,]
colnames(test) <- NAM_genos[2,]
#lod NAM genos imputed
NAM_genos <- read.xlsx("../data/NAM_map_and_genos-121025/NAM_genos_imputed_20090807.xlsx")
#generate indices for 10 each of first 5 RILs
index <- rep(1:10) + rep(c(0,100,200,300,400), each = 5) + 2
#generate indices for 10 each of first 5 RILs
index <- rep(1:10) + rep(c(0,100,200,300,400), each = 10) + 2
#reduce NAM_genos
genos_reduce <- NAM_genos[index,]
colnames(genos_reduce) <- NAM_genos[2,]
View(genos_reduce)
#reduce NAM_genos
genos_reduce <- NAM_genos[index,c(1:50)]
colnames(genos_reduce) <- NAM_genos[2,]
colnames(genos_reduce) <- NAM_genos[2,c(1:50)]
write.csv(genos_reduce, "../data/test_data/genos_reduce.csv")
write.csv(genos_reduce, "../data/test_data/genos_reduce.csv")
genos_reuce <- sapply(genos_reduce, as.numeric)
View(genos_reuce)
genos_reduce[.c(2:50)] <- sapply(genos_reduce[,c(2:50)], as.numeric)
genos_reduce[,c(2:50)] <- sapply(genos_reduce[,c(2:50)], as.numeric)
View(genos_reduce)
write.csv(genos_reduce, "../data/test_data/genos_reduce.csv")
write.csv(genos_reduce, "../data/test_data/genos_reduce.csv", index = FALSE)
?write.csv
write.csv(genos_reduce, "../data/test_data/genos_reduce.csv", row.names = FALSE)
table(genos_reduce)
genos_reduce[genos_reduce == 1.5] <- 1.0
genos_reduce[genos_reduce == 0.5] <- 1.0
write.csv(genos_reduce, "../data/test_data/genos_reduce.csv", row.names = FALSE)
install.packages("adegenet")
library(adegent)
library(adegenet)
data("microsatt")
View(microsatt)
microsatt[["loci.eff"]]
microsatt[["alleles.names"]]
microsatt[["tab"]]
microsatt[["tab"]] -> sat
View(sat)
obj <- as.genpop(microsatt$tab)
View(obj)
data(microsatt)
obj <- as.genpop(microsatt$tab)
listDist <- lapply(1:5, function(i) cailliez(dist.genpop(obj,met=i)))
for(i in 1:5) {attr(listDist[[i]],"Labels") <- popNames(obj)}
View(listDist)
listDist[[1]]
dudi.pco
?dudi.pco
listPco <- lapply(listDist, dudi.pco,scannf=FALSE)
View(listPco)
for(i in 1:5) {scatter(listPco[[i]],sub=paste("Dist:", i))}
install.packages("gstudio")
48486-48232
254/0.002664
0.002664/254
0.002705/254
2705-2664
41/254
data(capitales)
data(capitales)
View(capitales)
capitales[["dist"]]
d0 <- capitales$dist
is.euclid(d0)
cailliez(d0, TRUE)
data(capitales)
d0 <- capitales$dist
is.euclid(d0) # FALSE
d1 <- cailliez(d0, TRUE)
# Cailliez constant = 2429.87867
is.euclid(d1) # TRUE
plot(d0, d1)
abline(lm(unclass(d1)~unclass(d0)))
print(coefficients(lm(unclass(d1)~unclass(d0))), dig = 8) # d1 = d + Cte
is.euclid(d0 + 2428) # FALSE
is.euclid(d0 + 2430) # TRUE the smallest constant
d1
dist.genpop
makefreq
showMethods(makefreq)
makefreq(x)
obj
data(microsatt)
obj <- as.genpop(microsatt$tab)
obj
dist.genpop
View(obj)
x <- as.genpop(microsatt$tab)
View(microsatt)
View(x)
x
x
dist.genpop
x@ploidy == as.integer(1)
levels(x@loc.fac)
length(levels(x@loc.fac))
x@loc.fac
View(microsatt)
microsatt[["tab"]]
microsatt[["alleles.names"]]
microsatt[["loci.eff"]]
sum(microsatt[["loci.eff"]])
length(x@loc.fac)
makefreq(x, missing = "mean", quiet = TRUE)
rowSums(makefreq(x, missing = "mean", quiet = TRUE))
rowSums(microsatt[["tab"]])
17/858
17/858*9
?makefreq
data(microbov)
obj1 <- microbov
obj2 <- genind2genpop(obj1)
makefreq(obj2, missing="mean")
View(obj2)
View(obj2)
makefreq(x, missing = "mean")
tab()
tab
length(levels(x@loc.fac))
dist.genpop
x
nloc <- length(levels(x@loc.fac))
x@tab
#
loc.fac <- x@loc.fac
loc.fac
?split
%*%
?%*%
?t
?row
#calculate allele frequencies
X <- makefreq(x, missing = "mean", quiet = TRUE)
nrow(X)
X
View(X)
?diag
diag(x=1)
diag(X)
dist.genpop(x, method = 1)
X %*% t(X)
X
matrix(data = c(1,2,3,4,5,6))
matrix(data = c(1,2,3,4,5,6), nrow = 2)
matrix(data = c(1,2,3,4,5,6), nrow = 2) -> Y
d <- Y %*% t(Y)
vec <- sqrt(diag(d))
d <- d/vec[col(d)]
d <- d/vec[row(d)]
d <- -log(d)
d <- as.dist(d)
d
matrix(data = c(1,2,3,4,5,6), ncol = 2) -> Y
Y
d <- Y %*% t(Y)
vec <- sqrt(diag(d))
d <- d/vec[col(d)]
d <- d/vec[row(d)]
d <- -log(d)
d <- as.dist(d)
d
d <- Y %*% t(Y)
vec <- sqrt(diag(d))
d <- d/vec[col(d)]
d <- d/vec[row(d)]
d <- -log(d)
d
matrix(data = c(1,2,3,4,5,6), nrow = 2) -> Y
d <- Y %*% t(Y)
vec <- sqrt(diag(d))
d <- d/vec[col(d)]
d <- d/vec[row(d)]
d <- -log(d)
d
?log
